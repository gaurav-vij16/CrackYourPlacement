class Solution {
public:
    int countSquares(vector<vector<int>>& matrix) {
        
        int m = matrix.size();
        int n = matrix[0].size();

        vector<vector<int>> dp(m, vector<int>(n, 0));
        int count = 0;

        // Initialize the first row and first column of dp
        for (int i = 0; i < m; i++) {
            dp[i][0] = matrix[i][0];
            count += dp[i][0];
        }

        for (int j = 1; j < n; j++) {
            dp[0][j] = matrix[0][j];
            count += dp[0][j];
            }
        
        for(int i = 1; i < matrix.size();i++){
            for(int j = 1;j < matrix[0].size();j++){
                if(matrix[i][j]){
                    dp[i][j] = 1 + min({dp[i-1][j] , dp[i][j-1] , dp[i-1][j-1]});
                    count += dp[i][j];
                }
                else
                    dp[i][j] = 0;
            }
        }
        return count;   
    }
};

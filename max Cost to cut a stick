class Solution {
public:
    
    int solve(vector<int>& nums , int i ,int j , vector<vector<int>>& dp){
        if(i > j)return 0;
        
        if(dp[i][j] != -1)return dp[i][j];
        
        int mini = INT_MAX;
        
        for(int ind = i; ind <= j;ind++){
            int cost = abs(nums[j + 1] - nums[i -1]) + solve(nums , i , ind -1 , dp) + solve(nums , ind + 1 , j , dp);
            
            mini = min(cost , mini);
        }
        return dp[i][j] =  mini;
    }
    
    
    int minCost(int n, vector<int>& cuts) {
        cuts.insert(cuts.begin() , 0);
        cuts.push_back(n);
        
        sort(cuts.begin() , cuts.end());
        int m = cuts.size();
        
        vector<vector<int>> dp(m , vector<int>(m , -1));
        
        return solve(cuts , 1 , cuts.size() - 2 , dp);
    }
};
